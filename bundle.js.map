{"version":3,"sources":["webpack:///webpack/bootstrap f9ccb9b46164a0ceb222","webpack:///./javascripts/card.js","webpack:///./javascripts/dungeon.js","webpack:///./javascripts/board.js","webpack:///./javascripts/deck.js","webpack:///./javascripts/dungeon_row.js","webpack:///./javascripts/player_row.js","webpack:///./javascripts/fire.js","webpack:///./javascripts/dd_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnDA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACPD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACzLA;;AAEA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C,uCAAuC,MAAM;AAC7C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS,WAAW,wBAAwB;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f9ccb9b46164a0ceb222","class Card {\n  constructor(suit, value, img) {\n    this.suit = suit;\n    this.value = value;\n    this.destroyed = false;\n    this.specialValue = 0;\n    this.frozen = false;\n    this.img = img;\n  }\n\n  updateValue(change) {\n    this.value += change;\n  }\n\n  updateSpecial(change) {\n    this.specialValue += change;\n  }\n\n  destroy() {\n    this.destroyed = true;\n  }\n\n  freeze() {\n    this.frozen = true;\n  }\n\n}\n\nCard.suits = [\n  \"shields\",\n  \"swords\",\n  \"coins\",\n  \"potions\",\n  \"monsters\",\n  \"magic\"\n];\n\nCard.values = [\n  2, 3, 4, 5, 6, 7, 8, 9, 10, \"magic door\"\n];\n\nCard.imgs = [\n  \"https://i.imgur.com/VSfIozr.png\",\n  \"https://i.imgur.com/Zd3cxiV.png\",\n  \"https://i.imgur.com/uHmZ39z.png\",\n  \"https://i.imgur.com/VAPa9HY.png\",\n  \"https://i.imgur.com/46QvyiL.png\",\n  \"https://i.imgur.com/0JJTGtd.png\",\n  \"https://i.imgur.com/GWTBJQb.png\",\n];\n\nexport default Card;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/card.js\n// module id = 0\n// module chunks = 0","import Board from './board.js';\nimport View from './dd_view.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = $('.dd');\n  window.a = new Board;\n  new View(window.a, root);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/dungeon.js\n// module id = 1\n// module chunks = 0","import Deck from './deck.js';\nimport DungeonRow from './dungeon_row.js';\nimport PlayerRow from './player_row.js';\nimport Fire from './fire.js';\n\nclass Board {\n\n  constructor() {\n    this.Deck = new Deck;\n    this.DungeonRow = new DungeonRow;\n    this.populateDungeon(4);\n    this.PlayerRow = new PlayerRow;\n    this.Fire = new Fire;\n    this.moveBuffer = null;\n  }\n\n  populateDungeon(n) {\n    const newCards = this.Deck.draw(n);\n    this.DungeonRow.fillEmpties(newCards);\n  }\n\n  popIfDungeonEmpty() {\n    let count = this.DungeonRow.count;\n    if (count < 2) {\n      if (count === 1) {\n        this.populateDungeon(3);\n      } else if (count === 0) {\n        this.populateDungeon(4);\n      }\n      this.PlayerRow.destroyTemps();\n      this.clearAllDestroyed();\n    }\n  }\n\n  burnCard(card = this.moveBuffer) {\n    const meltValue = this.Fire.melt(card);\n    this.PlayerRow.player().updateSpecial(meltValue);\n    this.clearAllDestroyed();\n  }\n\n  clearAllDestroyed() {\n    this.DungeonRow.clearDestroyed();\n    this.PlayerRow.clearDestroyed();\n  }\n\n  selectTarget(target) {\n    if (!this.moveBuffer) {\n      if (target.card === null) {\n        return;\n      } else if (target.card.suit === \"player\") {\n        return;\n      }\n    }\n\n    if (target.card && target.card.frozen) {\n      return;\n    }\n\n    if (!this.moveBuffer) {\n      this.moveBuffer = target;\n    } else if (target.card === this.moveBuffer.card) {\n      this.moveBuffer = null;\n    } else if (this.legalMove(target)){\n      this.resolveAction(target);\n    }\n  }\n\n  resolveAction(target) {\n    const bCard = this.moveBuffer.card;\n    const bLoc = this.moveBuffer.location;\n    const tCard = target.card;\n    const tLoc = target.location;\n\n    if (bCard.suit === \"monsters\") {\n      if (tCard.suit === \"player\") {\n        bCard.destroy();\n        tCard.updateValue(bCard.value * -1);\n        if (tCard.value < 1) {\n          tCard.destroy();\n        }\n      } else if (tCard.suit === \"shields\") {\n        bCard.destroy();\n        const leftover = bCard.value - tCard.value;\n        tCard.updateValue(bCard.value * -1);\n        if (tCard.value < 1) {\n          tCard.destroy();\n          if (leftover > 0) {\n            const player = this.PlayerRow.player();\n            player.updateValue(leftover * -1);\n            if (player.value < 1) {\n              player.destroy();\n            }\n          }\n        }\n      }\n    } else if (bLoc.row === \"dungeon\"){\n      if (tLoc.row === \"fire\") {\n        bCard.destroy();\n        if (bCard.suit !== \"coins\" && bCard.suit !== \"magic\") {\n          const player = this.PlayerRow.player();\n          player.updateSpecial(bCard.value);\n        }\n      } else if (this.PlayerRow.spaces[tLoc.idx].length === 0) {\n        let card = this.DungeonRow.spaces[bLoc.idx].pop();\n        this.PlayerRow.spaces[tLoc.idx].push(card);\n        if (card.suit === \"coins\") {\n          card.freeze();\n          const player = this.PlayerRow.player();\n          player.updateSpecial(bCard.value);\n        }\n      }\n    } else if (bLoc.row === \"player\") {\n      if (bCard.suit === \"potions\") {\n        bCard.freeze();\n        const player = this.PlayerRow.player();\n        player.updateValue(bCard.value);\n        if (player.value > 13) {\n          player.value = 13;\n        }\n      } else if (bCard.suit === \"swords\") {\n        bCard.destroy();\n        tCard.updateValue(bCard.value * -1);\n        if (tCard.value < 1) {\n          tCard.destroy();\n        }\n      } else if (bCard.suit === \"magic\") {\n        bCard.destroy();\n        this.reshuffle();\n      }\n    }\n    this.moveBuffer = null;\n    this.clearAllDestroyed();\n    this.popIfDungeonEmpty();\n  }\n\n  reshuffle() {\n    let dRow = this.DungeonRow.spaces;\n    for (let i = 0; i < 4; i++) {\n      if (dRow[i].length === 1) {\n        this.Deck.deck.push(dRow[i].pop());\n      }\n    }\n    this.Deck.shuffle();\n  }\n\n  legalMove(target) {\n    const bCard = this.moveBuffer.card;\n    const bLoc = this.moveBuffer.location;\n    const tCard = target.card;\n    const tLoc = target.location;\n    const tIdx = target.index;\n    if (bLoc.row === \"dungeon\") {\n      if (bCard.suit !== \"monsters\") {\n        if (tLoc.row === \"fire\") {\n          return true;\n        } else if (tLoc.row === \"player\") {\n          if (this.PlayerRow.spaces[tLoc.idx].length === 0) {\n            return true;\n          }\n        }\n      } else if (bCard.suit === \"monsters\") {\n        if (tCard.suit === \"player\") {\n          return true;\n        } if (tLoc.row === \"player\") {\n          if (tCard.suit === \"shields\") {\n            return true;\n          }\n        }\n      }\n    } else if (bLoc.row === \"player\") {\n      if (bCard.suit === \"swords\") {\n        if (tCard.suit === \"monsters\") {\n          return true;\n        }\n      } else if (bCard.suit === \"potions\" || bCard.suit === \"magic\") {\n        if (tCard.suit === \"player\") {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n}\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/board.js\n// module id = 2\n// module chunks = 0","import Card from './card.js';\n\nclass Deck {\n\n  constructor() {\n    this.deck = [];\n    for (let i = 0; i < 2; i++) {\n      for (let j = 0; j < 6; j++) {\n        this.deck.push(new Card(Card.suits[i], Card.values[j], Card.imgs[i]));\n      }\n    }\n    for (let i = 2; i < 4; i++) {\n      for (let j = 0; j < 9; j++) {\n        this.deck.push(new Card(Card.suits[i], Card.values[j], Card.imgs[i]));\n      }\n    }\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 2; j++) {\n        this.deck.push(new Card(Card.suits[4], Card.values[i], Card.imgs[4]));\n      }\n    }\n    this.deck.push(new Card(Card.suits[4], Card.values[8], Card.imgs[4]));\n    for (let i = 0; i < 5; i++) {\n      this.deck.push(new Card(Card.suits[5], Card.values[9], Card.imgs[5]));\n    }\n    this.shuffle();\n    this.count = this.deck.length;\n  }\n\n  shuffle() {\n    let currentIndex = this.deck.length;\n    let tempVal;\n    let randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      tempVal = this.deck[currentIndex];\n      this.deck[currentIndex] = this.deck[randomIndex];\n      this.deck[randomIndex] = tempVal;\n    }\n  }\n\n  draw(n) {\n    const drawnCards = [];\n    while (this.count > 0 && n > 0) {\n      drawnCards.push(this.deck.pop());\n      n -= 1;\n      this.updateCount();\n    }\n    return drawnCards;\n  }\n\n  updateCount() {\n    this.count = this.deck.length;\n  }\n\n}\n\nexport default Deck;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/deck.js\n// module id = 3\n// module chunks = 0","class DungeonRow {\n  constructor() {\n    this.spaces = [\n      [],\n      [],\n      [],\n      []\n    ];\n\n    this.count = 0;\n  }\n\n  updateCount() {\n    let count = 0;\n    for (let i = 0; i < 4; i++) {\n      count += this.spaces[i].length;\n    }\n    this.count = count;\n  }\n\n  clearDestroyed() {\n    for (let i = 0; i < 4; i++) {\n      if (this.spaces[i].length) {\n        if (this.spaces[i][0].destroyed) {\n          this.spaces[i].pop();\n        }\n      }\n    }\n    this.updateCount();\n  }\n\n  fillEmpties(arr) {\n    for (let i = 0; i < 4; i++) {\n      if (this.spaces[i].length === 0 && arr.length > 0) {\n        this.spaces[i].push(arr.pop());\n      }\n    }\n    this.updateCount();\n  }\n\n  destroyCard(n) {\n    this.spaces[n][0].destroy();\n    this.clearDestroyed();\n  }\n\n  empty() {\n    for (let i = 0; i < 4; i++) {\n      if (this.spaces[i].length === 1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport default DungeonRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/dungeon_row.js\n// module id = 4\n// module chunks = 0","import Card from './card.js';\n\nclass PlayerRow {\n  constructor() {\n    const newPlayer = new Card(\"player\", 13, Card.imgs[6]);\n    this.spaces = [\n      [newPlayer],\n      [],\n      [],\n      []\n    ];\n  }\n\n  player() {\n    return this.spaces[0][0];\n  }\n\n  clearDestroyed() {\n    for (let i = 0; i < 4; i++) {\n      if (this.spaces[i].length) {\n        if (this.spaces[i][0].destroyed) {\n          this.spaces[i].pop();\n        }\n      }\n    }\n  }\n\n  destroyTemps() {\n    for (let i = 0; i < 4; i++) {\n      if (this.spaces[i].length) {\n        if (this.spaces[i][0].frozen) {\n          this.spaces[i][0].destroyed = true;\n        }\n      }\n    }\n  }\n}\n\nexport default PlayerRow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/player_row.js\n// module id = 5\n// module chunks = 0","class Fire {\n\n  constructor() {\n  }\n\n  melt(card) {\n    card.destroy();\n    if ([\"potions\", \"shields\", \"swords\"].includes(card.suit)) {\n      return card.value;\n    } else {\n      return 0;\n    }\n  }\n}\n\nexport default Fire;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/fire.js\n// module id = 6\n// module chunks = 0","class View {\n  constructor(board, $root) {\n    this.board = board;\n    this.$root = $root;\n\n    this.setupBoard();\n    this.bindEvents();\n  }\n\n  setupBoard() {\n    const $deck = $(\"<div>\");\n    $deck.addClass(\"deck\");\n    $deck.text(this.board.Deck.count);\n\n    const $fire = $(\"<li>\");\n    $fire.addClass(\"fire\");\n    $fire.text(\"fire\");\n    $fire.data(\"pos\", null);\n    $fire.data(\"loc\", \"fire\");\n\n    const $row1 = $(\"<ul>\");\n    for (let rowIdx = 0; rowIdx < 4; rowIdx++) {\n      let $card = $(\"<div>\");\n      $card.addClass(\"card\");\n      let $cardSlot = $(\"<div>\");\n      $cardSlot.addClass(\"card-slot\");\n      let $space = $(\"<li>\");\n      $space.data(\"pos\", rowIdx);\n      $space.data(\"loc\", \"dungeon\");\n      if (this.board.DungeonRow.spaces[rowIdx].length > 0) {\n        let card = this.board.DungeonRow.spaces[rowIdx][0];\n        let value = card.value;\n        let suit = card.suit;\n        let img = card.img;\n        if (this.board.moveBuffer && card === this.board.moveBuffer.card) {\n          $space.addClass(\"selected\");\n        }\n        $card.text(value);\n        $card.append($(`<img src=${card.img}/>`));\n        $space.append($card);\n      } else {\n        $space.append($cardSlot);\n      }\n      $row1.append($space);\n    }\n\n    const $row2 = $(\"<ul>\");\n    for (let rowIdx = 0; rowIdx < 4; rowIdx++) {\n      let $card = $(\"<div>\");\n      $card.addClass(\"card\");\n      let $cardSlot = $(\"<div>\");\n      $cardSlot.addClass(\"card-slot\");\n      let $space = $(\"<li>\");\n      $space.data(\"pos\", rowIdx);\n      $space.data(\"loc\", \"player\");\n      if (rowIdx === 0) {\n        if (this.board.PlayerRow.spaces[rowIdx].length > 0) {\n          $card.addClass(\"player\");\n          let card = this.board.PlayerRow.spaces[rowIdx][0];\n          let health = card.value + \" / 13\";\n          let score = card.specialValue;\n          let img = card.img;\n          $card.text(\"health: \" + health);\n          $card.append($(`<img src=${card.img}/>`));\n          $card.append(`<span>score: ${score}</span>`);\n          $space.append($card);\n        }\n      } else if (this.board.PlayerRow.spaces[rowIdx].length > 0) {\n        let card = this.board.PlayerRow.spaces[rowIdx][0];\n        let value = card.value;\n        let suit = card.suit;\n        let img = card.img;\n        if (this.board.moveBuffer && card === this.board.moveBuffer.card) {\n          $space.addClass(\"selected\");\n        }\n        if (card.frozen) {\n          $space.addClass(\"frozen\");\n        }\n        $card.text(value + \" of \" + suit);\n        $card.append($(`<img src=${card.img}/>`));\n        $space.append($card);\n      } else {\n        $space.append($cardSlot);\n      }\n      $row2.append($space);\n    }\n\n\n    const $drow = $(\"<div>\");\n    $drow.addClass(\"drow\");\n    $drow.append($row1);\n\n    const $prow = $(\"<div>\");\n    $prow.addClass(\"prow\");\n    $prow.append($row2);\n\n    const $youLose = $(\"<div>\");\n    $youLose.addClass(\"you-lose\");\n    $youLose.text(\"you lose!\");\n\n    const $youWin = $(\"<div>\");\n    $youWin.addClass(\"you-win\");\n    $youWin.text(\"you win!\");\n\n    if (this.board.PlayerRow.spaces[0].length === 0) {\n      this.$root.append($youLose);\n    } else if (this.board.Deck.count === 0 && this.board.DungeonRow.empty()) {\n        this.$root.append($youWin);\n    } else {\n      this.$root.append($deck);\n      this.$root.append($fire);\n      this.$root.append($drow);\n      this.$root.append($prow);\n    }\n  }\n\n  bindEvents() {\n    this.$root.on(\"click\", \"li\", (event => {\n      let location;\n      let card = null;\n      let idx = $(event.currentTarget).data(\"pos\");\n      if ($(event.currentTarget).data(\"loc\") === \"dungeon\") {\n        location = \"dungeon\";\n        if (this.board.DungeonRow.spaces[idx].length > 0) {\n          card = this.board.DungeonRow.spaces[idx][0];\n        }\n      } else if ($(event.currentTarget).data(\"loc\") === \"player\") {\n        location = \"player\";\n        if (this.board.PlayerRow.spaces[idx].length > 0) {\n          card = this.board.PlayerRow.spaces[idx][0];\n        }\n      } else if ($(event.currentTarget).data(\"loc\") === \"fire\") {\n        location = \"fire\";\n      }\n      this.board.selectTarget(\n        {location: {row: location, idx: idx}, card: card}\n      );\n      this.$root.empty();\n      this.setupBoard();\n    }));\n    // this.$root.on(\"click\", \".deck\", (event => {\n    //   this.board.Deck.draw(3);\n    //   this.$root.empty();\n    //   this.setupBoard();\n    // }));\n  }\n\n  // bindEvents() {\n  //\n  //   this.$root.on(\"click\", \".drow li\", (event => {\n  //     const pos = $(event.currentTarget).data(\"pos\");\n  //     console.log($(event.currentTarget).data(\"loc\"));\n  //     const card = this.board.DungeonRow.spaces[pos][0];\n  //     this.board.burnCard(card);\n  //     this.board.popIfDungeonEmpty();\n  //     const $lis = $('.drow ul')[0].childNodes;\n  //     for (let rowIdx = 0; rowIdx < 4; rowIdx++) {\n  //       let text = \"\";\n  //       if (this.board.DungeonRow.spaces[rowIdx].length > 0) {\n  //         text = this.board.DungeonRow.spaces[rowIdx][0].suit;\n  //       }\n  //       $($lis[rowIdx]).text(text);\n  //     }\n  //     $('.deck').text(this.board.Deck.count);\n  //     let value = this.board.PlayerRow.spaces[0][0].specialValue;\n  //     $($('.prow')[0].childNodes[0].childNodes[0]).text(value);\n  //   }));\n  // }\n}\n\nexport default View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/dd_view.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}